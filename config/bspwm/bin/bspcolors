#!/usr/bin/env bash

#
# Copyright (C) Mahmoud Mohamed (Ozil)  <https://github.com/mmsaeed509> , Aditya Shakya <adi1090x@gmail.com>
# LICENSE © GNU-GPL3
#

# A script to get colours from xrdb & deploy it to polybar, alacritty, rofi, dunst. #

DIR="$HOME/.config/bspwm"
DUNST_DIR="$HOME/.config/dunst"


getcolors () {
	FOREGROUND="$(xrdb -query | grep 'foreground:'| awk '{print $NF}')"
	BACKGROUND="$(xrdb -query | grep 'background:'| awk '{print $NF}')"
	CURSOR="$(xrdb -query | grep 'cursorColor:'| awk '{print $NF}')"
	BLACK="$(xrdb -query | grep 'color0:'| awk '{print $NF}')"
	RED="$(xrdb -query | grep 'color1:'| awk '{print $NF}')"
	GREEN="$(xrdb -query | grep 'color2:'| awk '{print $NF}')"
	YELLOW="$(xrdb -query | grep 'color3:'| awk '{print $NF}')"
	BLUE="$(xrdb -query | grep 'color4:'| awk '{print $NF}')"
	MAGENTA="$(xrdb -query | grep 'color5:'| awk '{print $NF}')"
	CYAN="$(xrdb -query | grep 'color6:'| awk '{print $NF}')"
	WHITE="$(xrdb -query | grep 'color7:'| awk '{print $NF}')"
	ALTBLACK="$(xrdb -query | grep 'color8:'| awk '{print $NF}')"
	ALTRED="$(xrdb -query | grep 'color9:'| awk '{print $NF}')"
	ALTGREEN="$(xrdb -query | grep 'color10:'| awk '{print $NF}')"
	ALTYELLOW="$(xrdb -query | grep 'color11:'| awk '{print $NF}')"
	ALTBLUE="$(xrdb -query | grep 'color12:'| awk '{print $NF}')"
	ALTMAGENTA="$(xrdb -query | grep 'color13:'| awk '{print $NF}')"
	ALTCYAN="$(xrdb -query | grep 'color14:'| awk '{print $NF}')"
	ALTWHITE="$(xrdb -query | grep 'color15:'| awk '{print $NF}')"
}

bspbar () {
	cat > $DIR/polybar/colors <<- EOF	
	[color]

	FOREGROUND = ${FOREGROUND}
	BACKGROUND = ${BACKGROUND}
	BLACK = ${BLACK}
	RED = ${RED}
	GREEN = ${GREEN}
	YELLOW = ${YELLOW}
	BLUE = ${BLUE}
	MAGENTA = ${MAGENTA}
	CYAN = ${CYAN}
	WHITE = ${WHITE}
	ALTBLACK = ${ALTBLACK}
	ALTRED = ${ALTRED}
	ALTGREEN = ${ALTGREEN}
	ALTYELLOW = ${ALTYELLOW}
	ALTBLUE = ${ALTBLUE}
	ALTMAGENTA = ${ALTMAGENTA}
	ALTCYAN = ${ALTCYAN}
	ALTWHITE = ${ALTWHITE}
	EOF
}

bspterm () {
	cat > "$DIR"/alacritty/colors.yml <<- _EOF_
		## Colors configuration
		colors:
		  # Default colors
		  primary:
		    background: '${BACKGROUND}'
		    foreground: '${FOREGROUND}'

		  # Normal colors
		  normal:
		    black:   '${BLACK}'
		    red:     '${RED}'
		    green:   '${GREEN}'
		    yellow:  '${YELLOW}'
		    blue:    '${BLUE}'
		    magenta: '${MAGENTA}'
		    cyan:    '${CYAN}'
		    white:   '${WHITE}'

		  # Bright colors
		  bright:
		    black:   '${ALTBLACK}'
		    red:     '${ALTRED}'
		    green:   '${ALTGREEN}'
		    yellow:  '${ALTYELLOW}'
		    blue:    '${ALTBLUE}'
		    magenta: '${ALTMAGENTA}'
		    cyan:    '${ALTCYAN}'
		    white:   '${ALTWHITE}'
	_EOF_
}

bsprofi () {
	cat > $DIR/rofi/themes/colors.rasi <<- EOF	
	* {
		background:			${BACKGROUND};
		foreground:			${FOREGROUND};
		selected:			${BLUE};
		highlight:			${YELLOW};
		urgent:				${RED};
		on:					${GREEN};
		off:				${RED};
	}
	EOF
}

bspdunst () {
	cat > $DUNST_DIR/dunstrc <<- EOF	
#########################################################################
# Copyright (C) Mahmoud Mohamed (Ozil)  <https://github.com/mmsaeed509> #
# LICENSE © GNU-GPL3                                                    #
#########################################################################

[global]
monitor = 0
follow = mouse
geometry = "280x50-10+48"
indicate_hidden = yes
shrink = no
separator_height = 4
separator_color = auto
padding = 15
horizontal_padding = 15
frame_width = 6
sort = no
idle_threshold = 120
font = JetBrains Mono 10
line_height = 4
markup = full
format = %s\n%b
alignment = left
show_age_threshold = 60
word_wrap = yes
ignore_newline = no
stack_duplicates = false
hide_duplicate_count = yes
show_indicators = no
icon_position = left
max_icon_size = 48
sticky_history = yes
history_length = 20
browser = x-www-browser -new-tab
always_run_script = true
title = Dunst
class = Dunst

[shortcuts]
close = ctrl+shift+space
close_all = ctrl+shift+space
history = ctrl+grave
context = ctrl+shift+period

[urgency_low]
timeout = 2
background  = "${BACKGROUND}"
foreground  = "${FOREGROUND}"
frame_color = "${BLUE}"

[urgency_normal]
timeout = 5
background  = "${BACKGROUND}"
foreground  = "${FOREGROUND}"
frame_color = "${BLUE}"

[urgency_critical]
timeout = 0
background  = "${BACKGROUND}"
foreground  = "${FOREGROUND}"
frame_color = "${BLUE}"

	EOF
}

main () {
	getcolors
	bspbar
	bspterm
	bsprofi
	bspdunst
}

main
